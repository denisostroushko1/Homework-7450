---
title: "Homework 2"
author: "Denis Ostroushko"
format: 
  pdf:
    toc: false 
    number-sections: false
    colorlinks: true
editor: source
execute: 
  eval: true
  echo: false
  warning: false
  message: false 
---

```{r}

library(survival)
library(tidyverse)
library(survminer)
library(muhaz)
library(km.ci)
library(KMsurv)
library(pec)

options(scipen = 999)

```

# Problem 1

### (i)

We are not able to calculate variance with the information given in this problem. We need the number of 
events and number of observations at risk for each time point leading up to the time point $j$. 

### (ii)

For an asymptotically normal random variable, either the delta method or an endpoint transformation 
produce desired outcome. 

We will use the endpoint transformation method to find a confidence interval for the log-odds of surviving 
past a time point $t_j$. 

First, obtain a confidence interval for the probability of surviving, which is given by 

$$\large \widehat{S(t_j)} \pm 1.96 * \sqrt{\widehat{Vat(S(t_j))}} = (lb, up)$$
The, for the log-odds of survival, a confidence interval is given by 

$$\Large (log \frac{lb}{1-lb}, log \frac{ub}{1-ub})$$
**Delta Method** 

if we have to determine the variance, as stated in the Note section, we would use the delta method approach
to get variance of $T(S(t_j))$. 

First, define $\large g(S(t_j)) = log \frac{S(t_j)}{1-S(t_j)}$

Then, $\large g'(S(t_j))^2 = [\frac{d}{dS} g(S(t_j))]^2 = (\frac{1}{S(t_j)} + \frac{1}{1 - S(t_j)})^2$

Therefore, $\large Var[T(S(t_j))] = (\frac{1}{S(t_j)} + \frac{1}{1 - S(t_j)})^2 * Var(S(t_j))$ 

We will need to compute this variance at $t_j$ using the value of $S(t_j)$ and its variance. 

Then we compute a 95% confidence interval: $\large T(S(t_j)) \pm 1.96 * \sqrt{ Var[T(S(t_j))]}$

### (iii)

Alternative hypothesis: $H_a: S_1(t_j) \neq S_0(t_j)$

Pooled standard to test the difference, taking into account the known sample sizes for group 0 and 1 
at time $t_j$: pooled $\large SE = \sqrt{\frac{(n_1 - 1) * Var( S_1(t_j))}{n_0 + n_1 - 2} + \frac{(n_0 -1) * {Var( S_0(t_j))}}{n_0 + n_1 - 2}}$

Test statistic: $\frac{( S_1(t_j) -  S_0(t_j)) - 0}{SE}$

Dealing with finite sample sizes, we will need to use t-distribution to test, so the cutoff for significance 
is $T^* = t_{.975, df = n_0 + n_1 - 2}$. We check the absolute value of our test statistic against $T^*$

### (iv)

Confidence interval for the difference for the two sample t-test is: $\large S_1(t_j) - S_0(t_j) \pm t_{.975, df = n_0 + n_1 - 2} * SE$, where $SE$ was defined in the previous section. 

However, comparing just the two point estimates means that we do not need to account for sample size, and 
can treat $\large S_1(t_j)$ and $\large S_0(t_j)$ as two independent normal random variables. 

Therefore, by properties of independent normal random variables we obtain their pooled standard error as: 
$\large SE = \sqrt{Var(S_1(t_j)) + Var(S_0(t_j))}$

Then, the confidence interval is given by: $\large S_1(t_j) - S_0(t_j) \pm 1.96 * SE$

# Problem 2

```{r}
data(kidney)

# head(kidney)
```

### (i)

@fig-km-prob2 shows the two KM survival curves for the two groups. It appears that group 2, with a 
percutaneously placed catheter, has more evidence that this method of placement delays time of infection 
more effectively. 

```{r}
#| label: fig-km-prob2
#| fig-cap: Kaplan Meier Estiamtes for time to infection in weeks the two groups  
#| fig-width: 6
#| fig-height: 6

fit <- survfit(Surv(time, delta) ~type ,data = kidney)

ggsurvplot(fit, data = kidney, 
           risk.table = F, 
           pval = TRUE,
           palette = c("#E41A1C", "#377EB8"), 
           title = "Survival Estimates by Group",
           conf.int = TRUE)

```

### (ii)

@fig-hz provides cumulative hazard estimates for the two groups. We can see that type 2 group has a 
much flatter cumulative hazard curve since there are less events in that group. 

Code chunk that produces cumulative hazard plot also outputs instant crude hazard for each group at time 5.

```{r}
#| label: fig-hz
#| fig-cap: Hazard functions for two groups 
#| 
kphaz.res1 <- 
  with(kidney %>% filter(type == 1), 
                         kphaz.fit(time, delta, method="nelson"))

kphaz.res2 <- 
  with(kidney %>% filter(type == 2), 
                         kphaz.fit(time, delta, method="nelson"))

CH_estiamte_date <- 
  rbind(
    kphaz.res1 %>% data.frame() %>% 
      mutate(cumhaz = cumsum(haz), 
             type = as.factor("1")),
    
    kphaz.res2 %>% data.frame() %>% 
      mutate(cumhaz = cumsum(haz), 
             type = as.factor("2"))
  )

lo <- CH_estiamte_date[CH_estiamte_date$type == "2", ][nrow(CH_estiamte_date[CH_estiamte_date$type == "2", ]),]

CH_estiamte_date <-
  rbind(
    CH_estiamte_date, 
    data.frame(
      time = max(CH_estiamte_date$time), 
      haz = NA, 
      var = NA, 
      cumhaz = lo$cumhaz, 
      type = "2"
    )
  )

ggplot(data = CH_estiamte_date, 
       aes(x = time, 
           y = cumhaz, 
           color = type)) + geom_step() + 
  theme_minimal()

# hazard at time 5 
print("Crude hazard for group type 1 at time = 5")
CH_estiamte_date %>% filter(type == "1", time == 5) %>% select(haz) %>% unlist()

print("Crude hazard for group type 2 at time = 5")
CH_estiamte_date %>% filter(type == "2", time == 5) %>% select(haz) %>% unlist()

```

### (iii)

We can use `R`'s `survfit` and summary functions to obtain a 36-month restricted mean survival time

```{r}
#| echo: true

fit_1 <- survfit(Surv(time, delta) ~1 ,data = kidney %>% filter(type == 1))

s.km.fit = summary(fit_1, rmean=36)

fit_2 <- survfit(Surv(time, delta) ~1 ,data = kidney %>% filter(type == 2))

s.km.fit2 = summary(fit_2, rmean=36)


```

Restricted mean survival time for group 1 is: `r round( s.km.fit$table["rmean"],2)`, and the standard error is
`r round(s.km.fit$table["se(rmean)"] ,2)`. Therefore, a confidence interval is given by (`r round(s.km.fit$table["rmean"] - 1.96 *s.km.fit$table["se(rmean)"] ,2)`, 
`r round(s.km.fit$table["rmean"] + 1.96 *s.km.fit$table["se(rmean)"],2)`)

Restricted mean survival time for group 2 is: `r round( s.km.fit2$table["rmean"],2)`, and the standard error is
`r round(s.km.fit2$table["se(rmean)"] ,2)`. Therefore, a confidence interval is given by (`r round(s.km.fit2$table["rmean"] - 1.96 *s.km.fit2$table["se(rmean)"] ,2)`, 
`r round(s.km.fit2$table["rmean"] + 1.96 *s.km.fit2$table["se(rmean)"],2)`)

### (iv)

* Null hypothesis: restricted to 36 month mean survival time  for group 1 is equal to mean for group 2

* Alternative hypothesis: restricted means are not equal 

* $\large H_0: \hat \mu^{36}_2 = \hat \mu^{36}_2$

* $\large H_a: \hat \mu^{36}_2 \neq \hat \mu^{36}_2$

* We will conduct a two-sample t-test, so we need a pooled standard error weighted by the sample sizes. 

* Test statistic is $\large \frac{\mu^{36}_2 - \hat \mu^{36}_2 - 0}{pooled \ SE}$


```{r}

test_stat <- (s.km.fit2$table["rmean"] - s.km.fit$table["rmean"] - 0)/
  sqrt(s.km.fit$table["se(rmean)"] ^ 2 * length(which(kidney$type == 1)) / nrow(kidney)
       + s.km.fit2$table["se(rmean)"] ^ 2* length(which(kidney$type == 2)) / nrow(kidney))
```

* Test statistic is `r test_stat`

* Significance threshold is given by the 97.5th quantile fo the t distribution on the `r nrow(kidney)-2` degrees
of freedom. So, $T^*$ is `r qt(0.975, df = nrow(kidney-2))`

* So, the two restricted survival mean times are different for the two groups. Time to infection is higher for 
group 2. 

### (v)

@fig-HW provides a plow with survival curves and HW confidence bands for each group. We can see that 
unlike equal probability bands, HW bands remain constant over time. 

```{r}
#| fig-cap: HW confidence bands for two group 
#| label: fig-HW
#| 
HW.plain <- km.ci(fit_1, conf.level=0.95, method="hall-wellner") 
HW.plain2 <- km.ci(fit_2, conf.level=0.95, method="hall-wellner") 

  rbind(
    data.frame(
      time = HW.plain$time, 
      type = as.factor("1"), 
      Surv = HW.plain$surv, 
      HW_lower = HW.plain$lower,
      HW_upper = HW.plain$upper
    ),
    data.frame(
      time = HW.plain2$time, 
      type = as.factor("2"), 
      Surv = HW.plain2$surv, 
      HW_lower = HW.plain2$lower,
      HW_upper = HW.plain2$upper
    )
  ) -> inter


max_time <- max(inter$time)

last_obs <- inter[inter$type == "2", ]
last_obs <- last_obs[last_obs$time == max(last_obs$time), ]
  
Surv_HW_data <- 
  rbind(inter, 
        data.frame(
          time = max_time, 
          type = as.factor("2"), 
          Surv = last_obs$Surv, 
          HW_lower = last_obs$HW_lower, 
          HW_upper = last_obs$HW_upper
        ))

Surv_HW_data <- 
  Surv_HW_data %>% 
  pivot_longer(
    col = c("Surv", "HW_lower", "HW_upper"), 
    values_to = 'value', 
    names_to = "curve_type"
  ) %>% 
  
  mutate(long_type = paste(type, curve_type)) %>% 
  
  arrange(type, time)


ggplot(data = Surv_HW_data %>% filter(curve_type == "Surv"), 
       aes(x = time, 
           y = value, 
           color = long_type)) + 
  geom_step(size = 0.75) + 
  
  geom_step(data = Surv_HW_data %>% filter(curve_type != "Surv"), 
            aes(x = time, 
                y = value, 
                color = long_type),
                legend = F, 
                linetype = "twodash") + 
  
  theme_minimal() + 
  
  scale_color_manual(name = "Line type", 
                     values=c("1 HW_lower" = "red", 
                                 "1 HW_upper" = "red", 
                                 "1 Surv" = "red", 
                                 "2 HW_lower" = "blue", 
                                 "2 HW_upper" = "blue", 
                                 "2 Surv" = "blue"), 
                     labels = c("1 HW_lower" = "Group 1 Survival Curve", 
                                "1 HW_upper" = "Group 1 HW Band",
                                "1 HW_lower" = "Group 1 HW Band",
                                "2 HW_lower" = "Group 2 Survival Curve", 
                                "2 HW_upper" = "Group 2 HW Band",
                                "2 HW_lower" = "Group 2 HW Band")) 

```


# Problem 3

```{r }

data(kidtran) 
kidtran_f <- kidtran %>% filter(gender == 2 & race == 1)

```

### (i)


I presume we need to identify probability distribution that fits our data. We will obtain a plot of time 
against survival probabilities on the logarithmic scale. A linear fit will indicate that a simple exponential 
model with one parameter is an appropriate fit for the data. 

```{r}
#| label: fig-check
#| fig-cap: Validation of exponential model fit to the data 
#| fig-width: 6
#| fig-height: 6

fit_3 <- survfit(Surv(time, delta) ~1 ,data = kidtran)

ggsurvplot(fit_3, data = kidtran, 
           risk.table = F, 
           pval = TRUE,
           palette = c("#E41A1C", "#377EB8"), 
           title = "Survival Estimates by Group",
           conf.int = TRUE) -> res3

ggplot(data = 
         data.frame(
           x = res3$data.survplot$time,
           log_y = log(res3$data.survplot$surv)
         ), 
       aes(x =x , 
           y = log_y)) + geom_step() + 
  stat_smooth(method = "lm", color = "red", se = F) + 
  
  theme_minimal() + 
  
  xlab("Time to infection") + 
  ylab("log S(T)")


```

@fig-check shows that an exponential model is an appropriate fit for the data. 
We will use the number of observed events and the total observed exposure time to estimate $\hat \lambda$

```{r}
exponential_lambda <- sum(kidtran_f$delta)/sum(kidtran_f$time)
  exponential_lambda
```

$\large \hat \lambda$ = `r round(exponential_lambda, 7)`

### (ii)

```{r}
# bootsrapping
total = 2000
t = 365

res <- 
  data.frame(
    iter = seq(1,total, by = 1), 
    pred = NA
  )

for(i in 1:total){
  df <- kidtran_f[sample(rownames(kidtran_f), size = nrow(kidtran_f), replace = T),]
  
  el <- sum(df$delta)/sum(df$time)
  
  res$pred[i] <- exp(-el * t)
}

```


Using exponential survival model $S(t) = exp(-0.000094 * t)$, we use $t = 365$ and obtain a 12-month 
survival probability, which is `r round(exp(-exponential_lambda * 365), 5)`. 

Now, using variance of parameter $\hat \lambda$ we can compute a 95% linear confidence interval, which is 
given in the `R` output below: 

```{r}
quantile(res$pred, c(0.025, 0.975))
```

### (iii)

```{r}

total = 2000
t = 365

res2 <- 
  data.frame(
    iter = seq(1,total, by = 1), 
    pred = NA
  )

for(i in 1:total){
  df <- kidtran_f[sample(rownames(kidtran_f), size = nrow(kidtran_f), replace = T),]
  
  el <- sum(df$delta)/sum(df$time)
  
  res2$pred[i] <- log(exp(-el * t))
}

res2$prob <- exp(res2$pred)

```

Using log transformation of survival probability at time 365 days, and exponential transformation of 
confidence interval endpoints, we use variance of lambda again to compute the 95% confidence interval, given below: 

```{r}
quantile(res2$prob, c(0.025, 0.975))

```


### (iv)

Due to large sample size, and small variance of $\hat \lambda$  the two 95% confidence intervals are 
approximately equal. We know that in small sample sizes log-transformed confidence intervals perform better, 
but we are not able to see this distinction. 

### (v)

We use a KM estimated survival curve for to display EP confidence band. @fig-ep shows the results. We can 
see that a time increases, the band gets wider. That is because EP bands are proportional to the point wise 
confidence interval estimates, which get larger as time goes on. 

```{r}
#| label: fig-ep
#| fig-cap: Equal probability confidence band 
#| 
model1<-survfit(Surv(time, delta) ~ 1, data = kidtran_f)
HW.plain <- km.ci(model1, conf.level=0.95, method="epband") 

nice_ep_data <- 
  data.frame(
    time = HW.plain$time,
    surv = HW.plain$surv, 
    lower = HW.plain$lower,
    upper = HW.plain$upper
  ) %>% 
  
  pivot_longer(
    cols = c("surv", "lower", "upper"), 
    names_to = "type", 
    values_to = "value"
  )

ggplot(data= nice_ep_data, 
       aes(x = time, 
           y = value, 
           color = type)) + geom_step(size = 1, alpha = 0.85) + 
  scale_color_manual(values = c("lower" = "red", "upper" = "red", "surv" = "blue")) + 
  theme_minimal()

```

### (vi)

Use `R` code below to get restricted survival means 

```{R}
#| echo: true
# mean survival for females restrited to 60 months 
wf_model <- survfit(Surv(time, delta) ~1 ,data = kidtran %>% filter(gender == 2, race == 1))
wf_model.sum = summary(wf_model, rmean=1825)

w_mean <- wf_model.sum$table["rmean"]
w_variance <- wf_model.sum$table["se(rmean)"]^2

```

* Mean survival time for white females is is `r round(w_mean, 2)`, the standard error is 
`r round(sqrt(w_variance),2)`. Confidence interval for the mean is 
(`r round(w_mean - 1.96*sqrt(w_variance), 2)`, `r round(w_mean + 1.96*sqrt(w_variance), 2)`)

```{R}
#| echo: true
# mean survival for males restrited to 60 months 
wm_model <- survfit(Surv(time, delta) ~1 ,data = kidtran %>% filter(gender == 1, race == 1))
wm_model.sum = summary(wm_model, rmean=1825)

m_mean <- wm_model.sum$table["rmean"]
m_variance <- wm_model.sum$table["se(rmean)"]^2
```

* Mean survival time for white males is is `r round(m_mean, 2)`, the standard error is 
`r round(sqrt(m_variance),2)`. Confidence interval for the mean is 
(`r round(m_mean - 1.96*sqrt(m_variance), 2)`, `r round(m_mean + 1.96*sqrt(m_variance), 2)`)

### (vii)

We will use the t-test approach to find the confidence interval for the mean survival time between white males
and white females. We will do so to account for varying sample sizes for these two groups. 

```{r}

w_n <- nrow(kidtran %>% filter(gender == 2, race == 1))
m_n <- nrow(kidtran %>% filter(gender == 1, race == 1))

diff <- wm_model.sum$table["rmean"] - wf_model.sum$table["rmean"]

pooled_var2 <- wm_model.sum$table["se(rmean)"]^2 * m_n/(m_n + w_n)+ 
  wf_model.sum$table["se(rmean)"] ^ 2 * w_n/(m_n + w_n)

diff / sqrt(pooled_var2)

```
* The difference is Male mean - Female mean = `r round(diff, 2)`

* Pooled standard error for this difference is `r round(sqrt(pooled_var2), 2)`

* We use 97.5 quantile of the t-distribution with `r m_n + w_n - 2` degrees of freedom in the calculation of 
the confidence interval 

* Confidence interval is given by `r round(diff, 2)` $\pm$ `r round(qt(0.975, df = m_n + w_n - 2), 4)` * 
`r round(sqrt(pooled_var2), 2)` = (
`r round(diff - qt(0.975, df = m_n + w_n - 2) * sqrt(pooled_var2), 2)`,
`r round(diff + qt(0.975, df = m_n + w_n - 2) * sqrt(pooled_var2), 2)`
)

* Based on this confidence interval we can conclude that the survival times for males are consistently lower 
on averages then the survival times of females. 

